From d645e5f53679dfeed27c9a5b001e622db0314564 Mon Sep 17 00:00:00 2001
From: "h.udo" <hudokkow@gmail.com>
Date: Wed, 6 Jan 2016 15:08:41 +0000
Subject: [PATCH 1/2] [src] Update to p8-platform

---
 src/FilmonAPI.cpp     |  2 +-
 src/PVRFilmonData.cpp | 24 ++++++++++++------------
 src/PVRFilmonData.h   |  6 +++---
 src/client.cpp        |  2 +-
 4 files changed, 17 insertions(+), 17 deletions(-)

diff --git a/src/FilmonAPI.cpp b/src/FilmonAPI.cpp
index 19f4d12..cd5e126 100644
--- a/src/FilmonAPI.cpp
+++ b/src/FilmonAPI.cpp
@@ -28,7 +28,7 @@
 
 #include <json/json.h>
 
-#include "platform/util/timeutils.h" // for usleep
+#include "p8-platform/util/timeutils.h" // for usleep
 
 #include "FilmonAPI.h"
 #include "client.h"
diff --git a/src/PVRFilmonData.cpp b/src/PVRFilmonData.cpp
index f0aa6f2..b7899a6 100644
--- a/src/PVRFilmonData.cpp
+++ b/src/PVRFilmonData.cpp
@@ -43,7 +43,7 @@ PVRFilmonData::~PVRFilmonData(void) {
 }
 
 bool PVRFilmonData::Load(std::string user, std::string pwd) {
-	PLATFORM::CLockObject lock(m_mutex);
+	P8PLATFORM::CLockObject lock(m_mutex);
 	username = user;
 	password = pwd;
 	bool res = filmonAPICreate();
@@ -74,7 +74,7 @@ const char* PVRFilmonData:: GetConnection(void) {
 }
 
 void PVRFilmonData::GetDriveSpace(long long *iTotal, long long *iUsed) {
-	PLATFORM::CLockObject lock(m_mutex);
+	P8PLATFORM::CLockObject lock(m_mutex);
 	XBMC->Log(LOG_DEBUG, "getting user storage from API");
 	filmonAPIgetUserStorage(iTotal, iUsed);
 	*iTotal = *iTotal/10;
@@ -89,7 +89,7 @@ int PVRFilmonData::GetChannelsAmount(void) {
 }
 
 PVR_ERROR PVRFilmonData::GetChannels(ADDON_HANDLE handle, bool bRadio) {
-	PLATFORM::CLockObject lock(m_mutex);
+	P8PLATFORM::CLockObject lock(m_mutex);
 	bool res = false;
 	bool expired = false;
 	if (time(0) - lastTimeChannels > FILMON_CACHE_TIME) {
@@ -159,7 +159,7 @@ int PVRFilmonData::GetChannelGroupsAmount(void) {
 }
 
 PVR_ERROR PVRFilmonData::GetChannelGroups(ADDON_HANDLE handle, bool bRadio) {
-	PLATFORM::CLockObject lock(m_mutex);
+	P8PLATFORM::CLockObject lock(m_mutex);
 	if (bRadio == false) {
 		if (time(0) - lastTimeGroups > FILMON_CACHE_TIME) {
 			XBMC->Log(LOG_DEBUG,
@@ -184,7 +184,7 @@ PVR_ERROR PVRFilmonData::GetChannelGroups(ADDON_HANDLE handle, bool bRadio) {
 
 PVR_ERROR PVRFilmonData::GetChannelGroupMembers(ADDON_HANDLE handle,
 		const PVR_CHANNEL_GROUP &group) {
-	PLATFORM::CLockObject lock(m_mutex);
+	P8PLATFORM::CLockObject lock(m_mutex);
 	if (time(0) - lastTimeGroups > FILMON_CACHE_TIME) {
 		XBMC->Log(LOG_DEBUG,
 				"cache expired, getting channel groups members from API");
@@ -230,7 +230,7 @@ int PVRFilmonData::UpdateChannel(unsigned int channelId) {
 // Called periodically to refresh EPG
 PVR_ERROR PVRFilmonData::GetEPGForChannel(ADDON_HANDLE handle,
 		const PVR_CHANNEL &channel, time_t iStart, time_t iEnd) {
-	PLATFORM::CLockObject lock(m_mutex);
+	P8PLATFORM::CLockObject lock(m_mutex);
 	XBMC->Log(LOG_DEBUG, "getting EPG for channel");
 	unsigned int broadcastIdCount = lastTimeChannels;
 	int chIndex = PVRFilmonData::UpdateChannel(channel.iUniqueId);
@@ -289,7 +289,7 @@ int PVRFilmonData::GetRecordingsAmount(void) {
 }
 
 PVR_ERROR PVRFilmonData::GetRecordings(ADDON_HANDLE handle) {
-	PLATFORM::CLockObject lock(m_mutex);
+	P8PLATFORM::CLockObject lock(m_mutex);
 	XBMC->Log(LOG_DEBUG, "getting recordings from API");
 	m_recordings = filmonAPIgetRecordings();
 	for (std::vector<PVRFilmonRecording>::iterator it = m_recordings.begin();
@@ -328,7 +328,7 @@ PVR_ERROR PVRFilmonData::GetRecordings(ADDON_HANDLE handle) {
 }
 
 PVR_ERROR PVRFilmonData::DeleteRecording(const PVR_RECORDING &recording) {
-	PLATFORM::CLockObject lock(m_mutex);
+	P8PLATFORM::CLockObject lock(m_mutex);
 	XBMC->Log(LOG_DEBUG, "deleting recording %s", recording.strRecordingId);
 	if (filmonAPIdeleteRecording((unsigned int)atoi(recording.strRecordingId))) {
 		PVR->TriggerRecordingUpdate();
@@ -345,7 +345,7 @@ int PVRFilmonData::GetTimersAmount(void) {
 
 // Gets called every 5 minutes, same as Filmon session lifetime
 PVR_ERROR PVRFilmonData::GetTimers(ADDON_HANDLE handle) {
-	PLATFORM::CLockObject lock(m_mutex);
+	P8PLATFORM::CLockObject lock(m_mutex);
 	XBMC->Log(LOG_DEBUG, "getting timers from API");
 	if (filmonAPIkeepAlive()) { // Keeps session alive
 		m_timers = filmonAPIgetTimers();
@@ -387,7 +387,7 @@ PVR_ERROR PVRFilmonData::GetTimers(ADDON_HANDLE handle) {
 }
 
 PVR_ERROR PVRFilmonData::AddTimer(const PVR_TIMER &timer) {
-	PLATFORM::CLockObject lock(m_mutex);
+	P8PLATFORM::CLockObject lock(m_mutex);
 	XBMC->Log(LOG_DEBUG, "adding timer");
 	if (filmonAPIaddTimer(timer.iClientChannelUid, timer.startTime,
 			timer.endTime)) {
@@ -400,7 +400,7 @@ PVR_ERROR PVRFilmonData::AddTimer(const PVR_TIMER &timer) {
 
 PVR_ERROR PVRFilmonData::DeleteTimer(const PVR_TIMER &timer,
 		bool bForceDelete) {
-	PLATFORM::CLockObject lock(m_mutex);
+	P8PLATFORM::CLockObject lock(m_mutex);
 	XBMC->Log(LOG_DEBUG, "deleting timer %d", timer.iClientIndex);
 	if (filmonAPIdeleteTimer(timer.iClientIndex, bForceDelete)) {
 		PVR->TriggerTimerUpdate();
@@ -411,7 +411,7 @@ PVR_ERROR PVRFilmonData::DeleteTimer(const PVR_TIMER &timer,
 }
 
 PVR_ERROR PVRFilmonData::UpdateTimer(const PVR_TIMER& timer) {
-	PLATFORM::CLockObject lock(m_mutex);
+	P8PLATFORM::CLockObject lock(m_mutex);
 	XBMC->Log(LOG_DEBUG, "updating timer");
 	if (filmonAPIdeleteTimer(timer.iClientIndex, true)
 			&& filmonAPIaddTimer(timer.iClientChannelUid, timer.startTime,
diff --git a/src/PVRFilmonData.h b/src/PVRFilmonData.h
index dea473a..b03f736 100644
--- a/src/PVRFilmonData.h
+++ b/src/PVRFilmonData.h
@@ -22,8 +22,8 @@
  */
 
 #include <vector>
-#include "platform/util/StdString.h"
-#include "platform/threads/mutex.h"
+#include "p8-platform/util/StdString.h"
+#include "p8-platform/threads/mutex.h"
 #include "client.h"
 #include "kodi/libXBMC_pvr.h"
 #include "FilmonAPI.h"
@@ -71,7 +71,7 @@ class PVRFilmonData {
 
 private:
 	int UpdateChannel(unsigned int channelId);
-	PLATFORM::CMutex m_mutex;
+	P8PLATFORM::CMutex m_mutex;
 	std::vector<PVRFilmonChannelGroup> m_groups;
 	std::vector<PVRFilmonChannel> m_channels;
 	std::vector<PVRFilmonRecording> m_recordings;
diff --git a/src/client.cpp b/src/client.cpp
index de0a67c..abefd9e 100644
--- a/src/client.cpp
+++ b/src/client.cpp
@@ -22,7 +22,7 @@
 
 #include "client.h"
 
-#include "platform/util/util.h"
+#include "p8-platform/util/util.h"
 #include "PVRFilmonData.h"
 #include "kodi/xbmc_pvr_dll.h"
 #include "kodi/libKODI_guilib.h"

From 865958036616eb097e114794520def4fa441c2ee Mon Sep 17 00:00:00 2001
From: "h.udo" <hudokkow@gmail.com>
Date: Wed, 6 Jan 2016 15:21:24 +0000
Subject: [PATCH 2/2] [cmake] Update to p8-platform

---
 CMakeLists.txt | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 7ff07e4..e7e97a4 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -8,15 +8,15 @@ enable_language(CXX)
 
 find_package(kodi REQUIRED)
 find_package(kodiplatform REQUIRED)
-find_package(platform REQUIRED)
+find_package(p8-platform REQUIRED)
 find_package(JsonCpp REQUIRED)
 
 include_directories(${kodiplatform_INCLUDE_DIRS}
-                    ${platform_INCLUDE_DIRS}
+                    ${p8-platform_INCLUDE_DIRS}
                     ${JSONCPP_INCLUDE_DIRS}
                     ${KODI_INCLUDE_DIR})
 
-set(DEPLIBS ${platform_LIBRARIES} ${JSONCPP_LIBRARIES})
+set(DEPLIBS ${p8-platform_LIBRARIES} ${JSONCPP_LIBRARIES})
 
 set(FILMON_SOURCES src/client.cpp
                    src/FilmonAPI.cpp
